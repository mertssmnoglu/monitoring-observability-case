networks:
  monitoring:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - monitoring
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      # - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 9000:3000
    networks:
      - monitoring
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
    volumes:
      - ./grafana:/etc/grafana/provisioning/
      - ./grafana/dashboards/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  prometheus-node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9100:9100
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true
    restart: unless-stopped
    networks:
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports:
      # - "4317:4317"   # OTLP GRPC
      # - "4318:4318"   # OTLP HTTP
      # - "8888:8888"   # Metrics endpoint
      - "8889:8889"   # Prometheus exporter metrics
    networks:
      - monitoring
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: 
      - --config=/etc/otel-collector-config.yaml
    depends_on:
      - prometheus

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    restart: unless-stopped
    container_name: clickhouse
    ports:
      - "19000:9000"
      - "8123:8123"
    env_file: ./clickhouse/.env
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.d/users.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - monitoring

volumes:
  clickhouse_data:
    name: clickhouse_data
